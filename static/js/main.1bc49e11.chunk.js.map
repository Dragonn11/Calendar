{"version":3,"sources":["Component/Calendar/index.js","App.js","serviceWorker.js","index.js"],"names":["Calender","props","_this","_this2","this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","Days","moment","weekdaysShort","Months","months","Years","Date","getFullYear","year","state","momentText","format","month","monthDays","daysInMonth","currentDate","console","log","get","currentDay","firstday","earlyDays","startOf","prevDays","subtract","i","unshift","lastday","lastDays","extraDays","parseInt","push","setMonth","assign","currMonth","indexOf","set","setState","setTimeout","window","location","href","MonthList","pop","data","map","d","react_default","a","createElement","key","onClick","e","selectMonth","className","NavigateMonth","changeMonth","showMonth","changeYear","target","value","YearList","Array","from","v","NavigateYear","onChange","nxtMonth","Context","add","prevMonth","width","style","curr_day","showYear","performance","navigation","type","substring","_this3","days","hiddenDates","length","color","lastHiddenDates","totalCells","concat","rows","elements","forEach","r","insertRow","slice","insert","actualDays","colSpan","Component","position","margin","App","Calendar","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1bc49e11.chunk.js","sourcesContent":["import React,{Component} from 'react';\r\nimport moment from 'moment';\r\nimport './calendar.css';\r\n\r\n\r\n\r\nclass Calender extends Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.width=props.width || \"350px\";\r\n        this.style = props.style || {};\r\n        this.style.width = this.width; \r\n\r\n        this.state={\r\n            momentText:moment(),\r\n            curr_day:moment(),\r\n            showMonth:false,\r\n            showYear:false\r\n        }\r\n        \r\n    }\r\n    Days=moment.weekdaysShort();\r\n    Months=moment.months();\r\n    Years = new Date().getFullYear();\r\n\r\n    UNSAFE_componentWillMount(){\r\n\r\n        if (window.performance) {\r\n            if (performance.navigation.type === 1) {\r\n               \r\n                let month=window.location.href.substring(window.location.href.indexOf(\"#\")+1);\r\n                let momentText=Object.assign({},this.state.momentText);\r\n                momentText=moment(momentText).set(\"month\",month);\r\n                if(month!==this.state.momentText.format(\"MMMM\")){\r\n                    this.setState({ momentText:momentText})\r\n                }\r\n            }\r\n          }\r\n\r\n      }\r\n\r\n\r\n   \r\n\r\n    year = () => {\r\n        return this.state.momentText.format(\"Y\");\r\n    }\r\n    month = () => {\r\n        return this.state.momentText.format(\"MMMM\");\r\n    }\r\n    monthDays = () => {\r\n        return this.state.momentText.daysInMonth();\r\n    }\r\n    currentDate = () => {\r\n        console.log(\"currentDate: \", this.state.momentText.get(\"date\"));\r\n        return this.state.momentText.get(\"date\");\r\n    }\r\n    currentDay = () => {\r\n        return this.state.momentText.format(\"D\");\r\n    }\r\n\r\n    firstday=()=>{\r\n        let earlyDays=[];\r\n        let firstday=moment(this.state.momentText).startOf('month').format('d');\r\n        let dateFrom = moment(this.state.momentText).subtract(1, 'months');\r\n        let prevDays=dateFrom.daysInMonth();\r\n\r\n        for(let i=0;i<firstday;i++){\r\n            earlyDays.unshift(prevDays-i)\r\n        }\r\n        return earlyDays;\r\n    }\r\n\r\n    lastday=()=>{\r\n        let lastDays=[];\r\n        let firstday=moment(this.state.momentText).startOf('month').format('d');\r\n        let totaldays=parseInt(firstday,10)+parseInt(this.monthDays(),10) ;\r\n        let extraDays= (7-(totaldays%7));\r\n        for(let i=1;i<=extraDays;i++){\r\n            lastDays.push(i);\r\n        }\r\n        return lastDays;\r\n    }\r\n\r\n    setMonth=(month)=>{\r\n        let momentText=Object.assign({},this.state.momentText);\r\n        let currMonth=this.Months.indexOf(month);\r\n        momentText=moment(momentText).set(\"month\",currMonth);\r\n        this.setState({\r\n            momentText:momentText\r\n        })\r\n        setTimeout(()=>{\r\n            console.log(window.location.href)\r\n        },1000)\r\n       \r\n\r\n    }\r\n    MonthList=(props)=>{\r\n        let pop=props.data.map(d=>{\r\n            return(\r\n                <div key={d*34}> <a href={'#'+d} onClick={(e)=>{this.selectMonth(e,d)}}>{d}</a></div>\r\n            )\r\n        })\r\n        return(\r\n            <div className=\"month-popup\">{pop}</div>\r\n        )\r\n    }\r\n\r\n\r\n    selectMonth=(e,month)=>{\r\n          \r\n        this.setMonth(month);   \r\n        \r\n\r\n    }  \r\n     NavigateMonth= () =>{\r\n        return(\r\n            <span className=\"label-month\" onClick={(e)=>{this.changeMonth(e,this.month())}}>\r\n                {this.month()}\r\n                {this.state.showMonth && \r\n                <this.MonthList data={this.Months}/>}\r\n            </span>\r\n        )\r\n    }\r\n\r\n    changeMonth=(e,month)=>{\r\n        this.setState({\r\n            showMonth:!this.state.showMonth\r\n        })\r\n\r\n    }\r\n\r\n\r\n    changeYear=(e)=>{\r\n\r\n        let momentText=Object.assign({},this.state.momentText);\r\n        // let currMonth=this.Months.indexOf(month);\r\n        momentText=moment(momentText).set(\"year\",e.target.value);\r\n        this.setState({\r\n            momentText:momentText\r\n        })\r\n\r\n    }\r\n\r\n    YearList=()=>{\r\n           return(\r\n            Array.from( new Array(50), (v,i) =>\r\n            <option key={i} value={this.Years+i}>{this.Years+i}</option>\r\n           )\r\n           )\r\n    }\r\n\r\n    NavigateYear=()=>{\r\n        console.log(this.Years)\r\n        return(\r\n            <span className=\"label-year\">\r\n                {this.year()}\r\n                \r\n                <select onChange={this.changeYear}>\r\n                     {this.YearList()}\r\n                     </select>\r\n      \t              \r\n                \r\n\r\n            </span>\r\n        )\r\n    }\r\n\r\n\r\n    nxtMonth = () => {\r\n        let Context = Object.assign({}, this.state.momentText);\r\n        Context = moment(Context).add(1, \"month\");\r\n        console.log(Context.format(\"MMMM\"))\r\n        window.location.href='#'+Context.format(\"MMMM\");\r\n        this.setState({\r\n            momentText: Context\r\n        });\r\n         \r\n\r\n        // this.props.onNextMonth && this.props.onNextMonth();\r\n    }\r\n\r\n    prevMonth = () => {\r\n        let Context = Object.assign({}, this.state.momentText);\r\n        Context = moment(Context).subtract(1, \"month\");\r\n        this.setState({\r\n            momentText: Context\r\n        });\r\n        // this.props.onPrevMonth && this.props.onPrevMonth();\r\n    }\r\n\r\n  \r\n\r\n\r\n    render(){\r\n       \r\n        let days=this.Days.map(d=>{\r\n            return(\r\n                <td key={d*50} className=\"week-day\">{d}</td>\r\n            )\r\n        })\r\n\r\n        let hiddenDates=[];\r\n        for(let i=0;i<this.firstday().length;i++){\r\n            hiddenDates.push(<td key={i*45} style={{color:'grey'}}>{this.firstday()[i]}</td>)\r\n        }\r\n\r\n        let lastHiddenDates=[];\r\n        for(let i=0;i<this.lastday().length;i++){\r\n            lastHiddenDates.push(<td key={i*45} style={{color:'grey'}}>{this.lastday()[i]}</td>)\r\n        }\r\n\r\n        let monthDays=[];\r\n        for(let i=1;i<=this.monthDays();i++){\r\n            let className=(i===this.currentDay()?\"day current-day\":\"day\")\r\n            monthDays.push(<td key={i*80} className={className}><span>{i}</span></td>)\r\n        }\r\n\r\n        let totalCells=[...hiddenDates,...monthDays,...lastHiddenDates];\r\n        let rows=[];\r\n        let elements=[];\r\n\r\n        totalCells.forEach((r,i)=>{\r\n    \r\n            if(i%7!==0) elements.push(r);\r\n            else {\r\n                let insertRow=elements.slice();\r\n                rows.push(insertRow);\r\n                elements=[];\r\n                elements.push(r)\r\n            }\r\n            if(i===totalCells.length-1){\r\n                let insert=elements.slice();\r\n                rows.push(insert);\r\n            }\r\n\r\n        })\r\n\r\n        let actualDays=rows.map((d,i)=>{\r\n\r\n            return (\r\n                <tr key={i*9}>{d}</tr>\r\n            )\r\n        })\r\n\r\n       \r\n        return(\r\n            <div className=\"calendar-container\"  style={this.style}>\r\n                <table className=\"calendar\">\r\n\r\n                <thead>\r\n                    <tr className=\"calendar-header\">\r\n                    <td colSpan='5'>\r\n                        <this.NavigateMonth />\r\n                        {\" \"}\r\n                        <this.NavigateYear/>\r\n                    </td>\r\n                    <td colSpan=\"2\" className=\"nav-month\">\r\n                        <i className=\"prev fa fa-fw fa-chevron-left\" onClick={(e)=>{this.prevMonth(e)}}></i>\r\n                        <i className=\"prev fa fa-fw fa-chevron-right\" onClick={(e)=>{this.nxtMonth(e)}}></i>\r\n                    </td>\r\n                    \r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                    {days}\r\n                    </tr>\r\n                    {actualDays}\r\n                </tbody>\r\n                \r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Calender;","import React, { Component } from 'react';\nimport Calendar from './Component/Calendar';\nimport './App.css';\n\nconst style = {\n  position: \"relative\",\n  margin: \"50px auto\"\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        {/* <header className=\"App-header\"> */}\n        <Calendar width=\"302px\" style={style} />\n         \n        {/* </header> */}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport '../node_modules/font-awesome/css/font-awesome.min.css';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}